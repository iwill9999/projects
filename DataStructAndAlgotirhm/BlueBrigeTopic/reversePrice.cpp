/*
小李的店里专卖其它店中下架的样品电视机，可称为：样品电视专卖店。
其标价都是4位数字（即千元不等）。
小李为了标价清晰、方便，使用了预制的类似数码管的标价签，只要用颜色笔涂数字就可以了（参见p1.jpg）。
这种价牌有个特点，对一些数字，倒过来看也是合理的数字。如：1 2 5 6 8 9 0 都可以。这样一来，如果牌子挂倒了，有可能完全变成了另一个价格，比如：1958 倒着挂就是：8561，差了几千元啊!!
当然，多数情况不能倒读，比如，1110 就不能倒过来，因为0不能作为开始数字。
有一天，悲剧终于发生了。某个店员不小心把店里的某两个价格牌给挂倒了。并且这两个价格牌的电视机都卖出去了!
庆幸的是价格出入不大，其中一个价牌赔了2百多，另一个价牌却赚了8百多，综合起来，反而多赚了558元。
请根据这些信息计算：赔钱的那个价牌正确的价格应该是多少？

*/

#include <iostream>
#include <algorithm>
#include <cmath>

using namespace std;


int a[10] = {0, 1, 2, -1, -1, 5, 9, -1, 8, 6};

int reverseNum(int n) {
    int k = 0;
    while (n) {
        if (a[n % 10] == -1)return 0;
        k = k*10 + a[n % 10];
        n /= 10;
    }
    return k;
}

int main() {
    for (int i = 1001; i <= 9999; ++i) {
        for (int j = 1001; j <= 9999; ++j) {
            if (i % 10 == 0) continue;
            int p = reverseNum(i);
            int q = reverseNum(j);
            if (q&&p){
                if ((200 <= abs(i - p) &&abs(i - p)<= 299)&&(800 <= abs(j - q) && abs(j - q)<= 899)){
                    if ((i-p + j-q)==558){
                        cout << i << "  "<<p<< "  "<<j<<"  "<< q<<"  "<<endl;
                    }
                }
            }
        }
    }
    return 0;
}